=> wandb run name : resnet18_leuven_bce resnet18_leuven_bce
=> torch version : 1.10.1+cu111
=> ngpus : 2
=> modeling the network resnet18 ...
=> num of params: 40499849 (154M)
=> building the oprimizer ...
=> building the dataloader ...
=> building the criterion ...
=> starting training engine ...
> /home/siddsuresh97/Projects/cs839-autoencoder/models/resnet.py(98)forward()
     97         import ipdb;ipdb.set_trace()
---> 98         x = self.encoder(x)
     99         return x
> /home/siddsuresh97/Projects/cs839-autoencoder/models/resnet.py(98)forward()
     97         import ipdb;ipdb.set_trace()
---> 98         x = self.encoder(x)
     99         return x
Traceback (most recent call last):
  File "/home/siddsuresh97/Projects/cs839-autoencoder/train.py", line 251, in <module>
  File "/home/siddsuresh97/Projects/cs839-autoencoder/train.py", line 99, in main
    main_worker(ngpus_per_node, args)
  File "/home/siddsuresh97/Projects/cs839-autoencoder/train.py", line 173, in main_worker
    do_train(train_loader, model, criterion, optimizer, epoch, args, leuven_bce_transposed)
  File "/home/siddsuresh97/Projects/cs839-autoencoder/train.py", line 218, in do_train
    import ipdb;ipdb.set_trace()
  File "/home/siddsuresh97/packages/anaconda3/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/siddsuresh97/packages/anaconda3/lib/python3.9/site-packages/torch/nn/parallel/data_parallel.py", line 168, in forward
    outputs = self.parallel_apply(replicas, inputs, kwargs)
  File "/home/siddsuresh97/packages/anaconda3/lib/python3.9/site-packages/torch/nn/parallel/data_parallel.py", line 178, in parallel_apply
    return parallel_apply(replicas, inputs, kwargs, self.device_ids[:len(replicas)])
  File "/home/siddsuresh97/packages/anaconda3/lib/python3.9/site-packages/torch/nn/parallel/parallel_apply.py", line 86, in parallel_apply
    output.reraise()
  File "/home/siddsuresh97/packages/anaconda3/lib/python3.9/site-packages/torch/_utils.py", line 434, in reraise
    raise exception
bdb.BdbQuit: Caught BdbQuit in replica 0 on device 0.
Original Traceback (most recent call last):
  File "/home/siddsuresh97/packages/anaconda3/lib/python3.9/site-packages/torch/nn/parallel/parallel_apply.py", line 61, in _worker
    output = module(*input, **kwargs)
  File "/home/siddsuresh97/packages/anaconda3/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/siddsuresh97/Projects/cs839-autoencoder/models/resnet.py", line 38, in forward
    leuven_normspace = self.leuven_encoder(x)
  File "/home/siddsuresh97/packages/anaconda3/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/siddsuresh97/Projects/cs839-autoencoder/models/resnet.py", line 98, in forward
    x = self.encoder(x)
  File "/home/siddsuresh97/Projects/cs839-autoencoder/models/resnet.py", line 98, in forward
    x = self.encoder(x)
  File "/home/siddsuresh97/packages/anaconda3/lib/python3.9/bdb.py", line 88, in trace_dispatch
    return self.dispatch_line(frame)
  File "/home/siddsuresh97/packages/anaconda3/lib/python3.9/bdb.py", line 113, in dispatch_line
    if self.quitting: raise BdbQuit
bdb.BdbQuit
If you suspect this is an IPython 8.5.0 bug, please report it at:
    https://github.com/ipython/ipython/issues
or send an email to the mailing list at ipython-dev@python.org
You can print a more detailed traceback right now with "%tb", or use "%debug"
to interactively debug it.
Extra-detailed tracebacks for bug-reporting purposes can be enabled via:
    %config Application.verbose_crash=True
Error in atexit._run_exitfuncs:
sqlite3.ProgrammingError: SQLite objects created in a thread can only be used in that same thread. The object was created in thread id 140316749329984 and this is thread id 140323706988352.
During handling of the above exception, another exception occurred:
Traceback (most recent call last):
  File "/home/siddsuresh97/.local/lib/python3.9/site-packages/IPython/core/history.py", line 831, in writeout_cache
    self._writeout_input_cache(conn)
  File "/home/siddsuresh97/.local/lib/python3.9/site-packages/IPython/core/history.py", line 814, in _writeout_input_cache
    conn.execute("INSERT INTO history VALUES (?, ?, ?, ?)",
sqlite3.ProgrammingError: SQLite objects created in a thread can only be used in that same thread. The object was created in thread id 140316749329984 and this is thread id 140323706988352.
Error in atexit._run_exitfuncs:
sqlite3.ProgrammingError: SQLite objects created in a thread can only be used in that same thread. The object was created in thread id 140316740937280 and this is thread id 140323706988352.
During handling of the above exception, another exception occurred:
Traceback (most recent call last):
  File "/home/siddsuresh97/.local/lib/python3.9/site-packages/IPython/core/history.py", line 831, in writeout_cache
    self._writeout_input_cache(conn)
  File "/home/siddsuresh97/.local/lib/python3.9/site-packages/IPython/core/history.py", line 814, in _writeout_input_cache
    conn.execute("INSERT INTO history VALUES (?, ?, ?, ?)",
sqlite3.ProgrammingError: SQLite objects created in a thread can only be used in that same thread. The object was created in thread id 140316740937280 and this is thread id 140323706988352.